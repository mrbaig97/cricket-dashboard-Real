{"version":3,"sources":["core.js","components/dashboard/index.jsx","components/scoreboard/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","window","location","hostname","split","Scoreboard","useState","teamOne","teamTwo","bat","score","wicket","over","bowler1","bowler2","bowler3","setScore","useEffect","axios","get","then","res","console","log","data","id","style","margin","Box","className","component","sx","m","width","noValidate","autoComplete","TextField","label","variant","value","onChange","e","prev","target","placeholder","type","Button","color","onClick","post","FormControl","minWidth","InputLabel","htmlFor","Select","native","defaultValue","aria-label","Dashboard","socket","io","on","message","close","Stack","spacing","direction","Card","maxWidth","CardContent","Typography","fontSize","gutterBottom","mb","comentry","App","history","useHistory","Navbar","bg","expand","Container","Brand","href","Avatar","alt","src","height","Toggle","aria-controls","Collapse","Nav","Link","push","exact","path","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b2a2bcd1.chunk.js","sourcesContent":["\nconst dev = \"http://localhost:5001\"\nexport const baseUrl = window.location.hostname.split(\":\")[0] === \"localhost\" ? dev : \"\";\n\n","import axios from 'axios';\nimport { useState, useEffect } from \"react\"\nimport { baseUrl } from \"./../../core\"\n\nimport Box from '@mui/material/Box';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListSubheader from '@mui/material/ListSubheader';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\n\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Stack from '@mui/material/Stack';\nimport io from 'socket.io-client';\nimport { height } from '@mui/system';\n\nfunction Scoreboard() {\n    const [score, setScore] = useState({\n        teamOne: \"\",\n        teamTwo: \"\",\n        bat: \"\",\n        score: \"\",\n        wicket: \"\",\n        over: \"\",\n        bowler1: \"\",\n        bowler2: \"\",\n        bowler3: \"\"\n    });\n\n    useEffect(() => {\n        axios.get(`${baseUrl}/api/v1/score`)\n            .then((res) => {\n                console.log(\"res +++: \", res.data);\n                setScore(res.data)\n            })\n    }, [])\n\n    const submit = () => {\n        axios.post(`${baseUrl}/api/v1/score`, score)\n            .then((res) => {\n                console.log(\"res: \", res.data);\n            })\n    }\n\n    return (\n        <div id = \"main1\">\n        <div style={{ margin: \"1rem\" }}>\n\n            <h1> Admin Control  </h1>\n\n            <Box className = \"dash\"\n                component=\"form\"\n                sx={{\n                    '& > :not(style)': { m: 1, width: '25ch' },\n                }}\n                noValidate\n                autoComplete=\"off\"\n            >\n\n                <TextField\n                className = \"dash\"\n                    label=\"Team 1\"\n                    variant=\"standard\"\n                    value={score.teamOne}\n                    onChange={(e) => {\n                        setScore((prev) => {\n                            return { ...prev, teamOne: e.target.value }\n                        })\n                    }}\n                    placeholder=\"enter team one name\"\n                />\n\n                <TextField\n                className = \"dash\"\n                    label=\"Team 2\"\n                    variant=\"standard\"\n                    value={score.teamTwo}\n                    onChange={(e) => {\n                        setScore((prev) => {\n                            return { ...prev, teamTwo: e.target.value }\n                        })\n                    }}\n                    placeholder=\"enter team two name\"\n                /> <br />\n                <TextField\n                className = \"dash\"\n                    label=\"Bating team\"\n                    variant=\"standard\"\n                    value={score.bat}\n                    onChange={(e) => {\n                        setScore((prev) => {\n                            return { ...prev, bat: e.target.value }\n                        })\n                    }}\n                    placeholder=\"who is batting\"\n                /> <br />\n                <TextField\n                className = \"dash\"\n                    label=\"runs/score\"\n                    variant=\"standard\"\n                    type=\"number\"\n                    value={score.score}\n                    onChange={(e) => {\n                        setScore((prev) => {\n                            return { ...prev, score: e.target.value }\n                        })\n                    }}\n                    placeholder=\"What's the score\"\n                /> <br />\n                  <TextField\n                  className = \"dash\"\n                    label=\"Bowler1\"\n                    variant=\"standard\"\n                    type=\"text\"\n                    value={score.bowler1}\n                    onChange={(e) => {\n                        setScore((prev) => {\n                            return { ...prev, bowler1: e.target.value }\n                        })\n                    }}\n                    placeholder=\"bowler's name\"\n                /><br/>\n                   <TextField\n                   className = \"dash\"\n                    label=\"Bowler2\"\n                    variant=\"standard\"\n                    type=\"text\"\n                    value={score.bowler2}\n                    onChange={(e) => {\n                        setScore((prev) => {\n                            return { ...prev, bowler2: e.target.value }\n                        })\n                    }}\n                    placeholder=\"bowler's name\"\n                /><br/>\n                   <TextField\n                   className = \"dash\"\n                    label=\"Bowler3\"\n                    variant=\"standard\"\n                    type=\"text\"\n                    value={score.bowler3}\n                    onChange={(e) => {\n                        setScore((prev) => {\n                            return { ...prev, bowler3: e.target.value }\n                        })\n                    }}\n                    placeholder=\"bowler's name\"\n                /><br/>\n                <TextField\n                className = \"dash\"\n                    label=\"wicket\"\n                    variant=\"standard\"\n                    type=\"number\"\n                    value={score.wicket}\n                    onChange={(e) => {\n                        setScore((prev) => {\n                            return { ...prev, wicket: e.target.value }\n                        })\n                    }}\n                    placeholder=\"how many wickets\"\n                /> <br />\n                <TextField\n                className = \"dash\"\n                    label=\"over\"\n                    variant=\"standard\"\n                    type=\"number\"\n                    value={score.over}\n                    onChange={(e) => {\n                        setScore((prev) => {\n                            return { ...prev, over: e.target.value }\n                        })\n                    }}\n                    placeholder=\"how many overs\"\n                /> <br />\n                <Button variant=\"contained\" color = \"success\" onClick={submit}>Update Score</Button>\n\n            </Box>\n            <div>\n      <FormControl sx={{ m: 2, minWidth: 200}}>\n        <InputLabel htmlFor=\"grouped-native-select\">Select Team One</InputLabel>\n        <Select native defaultValue=\"\" id=\"grouped-native-select\" label=\"Select Team One\">\n          <option aria-label=\"None\" value=\"\" />\n            <option value={1}>Australia</option>\n            <option value={2}>New Zealand</option>\n            <option value={3}>India</option>\n            <option value={4}>Pakistan</option>\n            <option value={5}>England</option>\n            <option value={6}>West Indies</option>\n            <option value={7}>Bangladesh</option>\n            <option value={8}>Soth Africa</option>\n            <option value={9}>Srilanka</option>\n            <option value={10}>Afghanistan</option>\n          </Select>\n      </FormControl>\n      <FormControl sx={{ m: 2, minWidth: 200}}>\n        <InputLabel htmlFor=\"grouped-native-select\">Select Team Two</InputLabel>\n        <Select native defaultValue=\"\" id=\"grouped-native-select\" label=\"Select Team One\">\n          <option aria-label=\"None\" value=\"\" />\n            <option value={1}>Australia</option>\n            <option value={2}>New Zealand</option>\n            <option value={3}>India</option>\n            <option value={4}>Pakistan</option>\n            <option value={5}>England</option>\n            <option value={6}>West Indies</option>\n            <option value={7}>Bangladesh</option>\n            <option value={8}>Soth Africa</option>\n            <option value={9}>Srilanka</option>\n            <option value={10}>Afghanistan</option>\n          </Select>\n      </FormControl>\n    </div>\n\n        </div>\n        </div>\n    );\n}\n\nexport default Scoreboard;","import axios from 'axios';\n// import './App.css';\nimport { useState, useEffect } from \"react\"\nimport { baseUrl } from \"./../../core\"\n\nimport Stack from '@mui/material/Stack';\nimport io from 'socket.io-client';\n\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\n\n\n\nfunction Dashboard() {\n\n    const [score, setScore] = useState({});\n\n\n    useEffect(() => {\n        axios.get(`${baseUrl}/api/v1/score`)\n            .then((res) => {\n                console.log(\"res +++: \", res.data);\n                setScore(res.data)\n            })\n    }, [])\n    console.log(setScore);\n\n    useEffect(() => {\n        const socket = io(\"http://localhost:5001\"); // to connect with locally running Socker.io server\n\n        socket.on('connect', function () {\n            console.log(\"connected to server\")\n        });\n        socket.on('disconnect', function (message) {\n            console.log(\"disconnected from server: \", message);\n        });\n        socket.on('SCORE', function (data) {\n            console.log(data);\n            setScore(data)\n        });\n\n        return () => {\n            socket.close();\n        };\n    }, []);\n\n\n\n\n    return (\n        <div style={{ margin: \"1rem\" }}>\n\n            <h1 id = \"head\"> Live Score </h1>\n\n\n            <Stack spacing={2} direction=\"column\">\n\n                <Card id = 'score'  sx={{ maxWidth: 1000 }}>\n                    <CardContent>\n                        <Typography id = \"title\" sx={{ fontSize: 28 }} color=\"black\" gutterBottom>\n                            {score?.teamOne} vs. {score?.teamTwo}\n                            <br/>\n                             (bat {score.bat})\n                        </Typography>\n                        <Typography variant=\"h3\" component=\"div\">\n                            {score?.score} / {score?.wicket}\n                        </Typography>\n                        <Typography\n                        variant=\"h5\"\n                        sx={{ mb: 1.5 }} color=\"white\">\n                            over: {score?.over}\n                        </Typography>\n                        <Typography variant=\"body1\">\n                            comentry: <b> {score?.comentry || \"Match Starts at 7:00 PST\"}</b>\n                        </Typography>\n                    </CardContent>\n                    <br/>\n                    <CardContent>\n                        <Typography  variant=\"h5\" sx={{ mb: 4 }} color=\"dark\">\n                            Bowler1: {score?.bowler1}\n                        </Typography>\n                        <Typography variant=\"h5\" sx={{ mb: 4 }} color=\"dark\">\n                            Bowler2: {score?.bowler2}\n                        </Typography>\n                        <Typography variant=\"h5\" sx={{ mb: 4 }} color=\"dark\">\n                            Bowler3: {score?.bowler3}\n                        </Typography>\n                    </CardContent>\n                    {/* <CardActions>\n                        <Button size=\"small\">Learn More</Button>\n                    </CardActions> */}\n                </Card>\n            </Stack>\n         \n\n\n        </div>\n    );\n}\n\nexport default Dashboard;","import './App.css';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useHistory,\n  Redirect\n} from \"react-router-dom\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button, Navbar, Container, Nav, NavDropdown, Form, FormControl } from 'react-bootstrap';\n\nimport Dashboard from \"./components/dashboard/index\"\nimport Avatar from '@mui/material/Avatar';\nimport Stack from '@mui/material/Stack';\nimport Scoreboard from \"./components/scoreboard/index\"\n\n\nfunction App() {\n  let history = useHistory();\n\n  return (\n    <>\n    <div id = \"body\">\n      <Navbar bg=\"dark\" expand=\"lg\">\n        <Container>\n          <Navbar.Brand href=\"#home\">\n          <Stack direction=\"row\" spacing={2}>\n      <Avatar\n        alt=\"Remy Sharp\"\n        src=\"https://book.giflingua.com/images/origin/cricket-elements-82743.gif\"\n        sx={{ width: 56, height: 56 }}\n      />\n    </Stack>\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"me-auto\">\n              <Nav.Link className = \"link\" onClick={() => { history.push(\"/\") }}>Scoreboard</Nav.Link>\n              <Nav.Link className = \"link\" onClick={() => { history.push(\"/admin\") }}>Dashboard</Nav.Link>\n\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    \n\n      <Switch>\n        <Route exact path=\"/\" component={Scoreboard} />\n        <Route path=\"/admin\" component={Dashboard} />\n\n        <Redirect to=\"/\" />\n      </Switch>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  BrowserRouter as Router\n} from \"react-router-dom\";\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}